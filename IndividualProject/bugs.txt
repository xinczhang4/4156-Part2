Bug 1: Improper Initialization
Location: Course.java, Constructor(), line 23
Description: In the Course constructor, the enrolledStudentCount is incorrectly initialized to 500
instead of 0.
Resolution: Changed the initialization of enrolledStudentCount from 500 to 0 to correctly reflect
the default state of an empty course.

Bug 2: Incorrect Logic in isCourseFull() Method
Location: Course.java, method isCourseFull()
Description: The current logic leads to incorrect return value when checking if a course is full.
Resolution: Change the comparison to enrolledStudentCount >= enrollmentCapacity.

Bug3: Incorrect Return Value in enrollStudent() Method
Location: Course.java, method enrollStudent()
Description: Currently return false when a student is successfully added, and omit cases when full.
Resolution: Add extra branch to check whether the course is full or not.

Bug4: Incorrect Return Value in dropStudent() Method
Location: Course.java, method dropStudent()
Description: Currently, the dropStudent() method always returns false regardless of whether the
student was successfully dropped.
Resolution: Add a condition to check if there are enrolled students before decrementing the count.
Return true if a student was successfully dropped, otherwise false.

Bug5: Incorrect Return Value in getCourseLocation() Method
Location: Course.java, method getCourseLocation()
Description: The getCourseLocation() method incorrectly returns the instructor's name instead of
the course location.
Resolution: Update the method to return courseLocation instead of instructorName.

Bug6: Incorrect Return Value in ggetInstructorNamen() Method
Location: Course.java, method getInstructorName()
Description: The getInstructorName() method incorrectly returns the course location instead of
the instructor's name.
Resolution: Update the method to return instructorName instead of courseLocation.

Bug7: Incorrect Negative Return Value in getNumberOfMajors() Method
Location: Department.java, method getNumberOfMajors()
Description: The getNumberOfMajors() method returns the negative value of this.numberOfMajors
instead of the actual number of majors.
Resolution: Change the return statement to return positive numberOfMajors.

Bug8: Hardcoded Return Value in getDepartmentChair() Method
Location: Department.java, method getDepartmentChair()
Description: The getDepartmentChair() method returns the string "this.departmentChair" instead of
the actual value of the departmentChair field. This results in a hardcoded string being returned
instead of the intended dynamic value.
Resolution: Change the return statement to return this.departmentChair.

Bug9: No Check for Negative Number of Majors in dropPersonFromMajor()
Location: Department.java, method dropPersonFromMajor()
Description: The dropPersonFromMajor() method decrements the numberOfMajors without checking if it
is greater than zero. This can result in a negative number of majors, which is likely not intended.
Resolution: Add a condition to check if numberOfMajors is greater than zero before decrementing it.

Bug10: Redundant quotation marks in toString() Method
Location: Department.java, method toString()
Description: The toString() method incorrectly returns the literal string "result.toString()"
instead of the actual content of the result StringBuilder.
Resolution: Update the return statement to return result.toString().

Bug11: Incorrect HTTP Status Code in retrieveDepartment() Method
Location: RouteController.java, method retrieveDepartment()
Description: The method returns HTTP 200 (OK) when the department is not found, and
HTTP 404 (NOT FOUND) when it is found, which is incorrect.
Resolution: Reverse the status codes to ensure that HTTP 404 is returned when the department is not
found, and HTTP 200 is returned when the department is successfully retrieved.

Bug 12: Incorrect HTTP Status Code for Course Retrieval

Location: retrieveCourse() method in RouteController.java
Description: When a course is successfully found, the method is returning HttpStatus.FORBIDDEN,
which indicates that the user is forbidden from accessing the resource. This is not appropriate for
a successful course retrieval.
Resolution: Change the status code to HttpStatus.OK when the course is successfully found.

Bug 13: Incorrect HTTP Status Code and Major Number Displayed
Location: getMajorCtFromDept() in RouteController.java
Description: When success, the method is returning HttpStatus.FORBIDDEN, and there is extra negative
mark when output major counts.
Resolution: Change the status code to HttpStatus.OK when it success, remove the negative mark.

Bug 14: Hardcode Course Time
Location: findCourseTime() in RouteController.java
Description: The string displayed is partially hardcoded to "some time" rather than dynamic variable.
Resolution: Replace "some time" with Course getCourseTimeSlot function.

Bug 15: Incorrect HTTP Status Code in Exception Handler
Location: handleException() in RouteController.java
Description: When an exception occurs, the method returns an HttpStatus.OK response,
which indicates that the request was successfully processed. This is misleading, as the request
actually failed due to an error.
Resolution: Change the response status to HttpStatus.INTERNAL_SERVER_ERROR.

Bug16: Unnecessary Import from PMD
Description: Unused import accross test units and src code
Resolution: Delete all unused import.

Bug 17: LouseCoupling using HashMap
Description: HashMap type is used accross the application which is depreciated
Resolution: Change all HashMap type definition to Map.

Bug18: SingularField
Location: IndividualProjectApplicationUnitTests.java
Description: The mockDatabase is only used in a single test method.
Resolution: Declare it as a local variable inside the test method using this variable.

Bug19: ControlStatementBraces
Location: Course.java line36, line107, line108
Resolution: Add braces for these statements.

Bug20: MissingOverride
Location: Course.java, Department.java toString() method
Resolution: Add @Override annotation to toString() method.

Bug25: ReturnEmptyCollectionRatherThanNull
Location: MyFileDatabase.java line54
Description: When handling exception, it should return an empty collection rather than null.
Resolution: Return new HashMap() instance rather than null.

Bug22: UnnecessaryAnnotationValueElement
Location: RouteController.java line39
Description: Avoid the use of value in annotations when its the only element.
Resolution: Removing the 'value =' inside @RequestParam

Bug23: UseLocaleWithCaseConversions
Location: RouteController.java line44, line47
Resolution: When doing a String.toLowerCase()/toUpperCase() call, use a Locale

Bug24: LiteralsFirstInComparisons
Location: IndividualProjectApplication line35
Description: It is better to put the literal on the left-hand side of the comparison. This avoids
potential NullPointerException issues if arg happens to be null.
Resolution: Revert to "setup".equals(arg).

Bug25: UseLocaleWithCaseConversions
Location: RouteController.java line44,line47
Description: When doing a String.toLowerCase()/toUpperCase() call, use a Locale
Resolution: Use toString(Locale.ROOT) to ensure consistent behavior across different environments


